{"version":3,"sources":["context/RecipeContext.js","context/RecipeReducer.js","types.js","context/RecipeState.js","components/SearchRecipes.js","components/Recipe.js","components/Recipes.js","components/Header.js","App.js","index.js"],"names":["RecipeContext","createContext","initialState","state","type","payload","recipes","error","RecipeState","props","useReducer","RecipeReducer","dispatch","Provider","value","getRecipes","a","async","fetch","process","response","json","rescipes","hits","statusText","searchRecipes","query","children","SearchRecipes","useContext","useState","search","setSearch","className","onSubmit","e","preventDefault","alert","onChange","target","Recipe","recipe","title","calories","image","ingredients","src","alt","parseInt","map","ingredient","index","key","text","Recipes","recipeContext","useEffect","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04d2d579.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst RecipeContext = createContext();\n\nexport default RecipeContext;\n","import { GET_RECIPES, SEARCH_RECIPES, SET_ERROR } from \"../types\";\n\nconst initialState = {};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_RECIPES:\n    case SEARCH_RECIPES:\n      return { ...state, recipes: payload };\n    case SET_ERROR:\n      return { ...state, error: payload };\n    default:\n      return state;\n  }\n};\n","export const GET_RECIPES = \"GET_RECIPES\";\nexport const SEARCH_RECIPES = \"SEARCH_RECIPES\";\nexport const SET_ERROR = \"SET_ERROR\";\n","import React, { useReducer } from \"react\";\nimport RecipeContext from \"./RecipeContext\";\nimport RecipeReducer from \"./RecipeReducer\";\nimport { GET_RECIPES, SEARCH_RECIPES, SET_ERROR } from \"../types\";\n\nconst RecipeState = props => {\n  const initialState = {\n    recipes: [],\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(RecipeReducer, initialState);\n\n  //Get Recipes\n  const getRecipes = async () => {\n    try {\n      const response = await fetch(\n        `https://api.edamam.com/search?q=chicken&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_KEY}`\n      );\n\n      const rescipes = await response.json();\n\n      dispatch({ type: GET_RECIPES, payload: rescipes.hits });\n    } catch (error) {\n      dispatch({ type: SET_ERROR, payload: error.response.statusText });\n    }\n  };\n\n  //Search Recipes\n  const searchRecipes = async query => {\n    try {\n      const response = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_KEY}`\n      );\n\n      const rescipes = await response.json();\n\n      dispatch({ type: SEARCH_RECIPES, payload: rescipes.hits });\n    } catch (error) {\n      dispatch({ type: SET_ERROR, payload: error.response.statusText });\n    }\n  };\n\n  return (\n    <RecipeContext.Provider\n      value={{ recipes: state.recipes, getRecipes, searchRecipes }}\n    >\n      {props.children}\n    </RecipeContext.Provider>\n  );\n};\n\nexport default RecipeState;\n","import React, { useContext, useState } from \"react\";\nimport RecipeContext from \"../context/RecipeContext\";\n\nconst SearchRecipes = () => {\n  const recipeContext = useContext(RecipeContext);\n  const { searchRecipes } = recipeContext;\n\n  const [search, setSearch] = useState(\"\");\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    if (search === \"\") {\n      alert(\"Please enter to search...\");\n    } else {\n      searchRecipes(search);\n    }\n  };\n\n  return (\n    <form className=\"search-form\" onSubmit={getSearch}>\n      <input\n        type=\"text\"\n        className=\"search-bar\"\n        value={search}\n        onChange={updateSearch}\n      />\n      <button className=\"search-button\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchRecipes;\n","import React from \"react\";\n\nconst Recipe = ({ recipe: { title, calories, image, ingredients } }) => {\n  return (\n    <div className=\"recipe\">\n      <h1 className=\"recipe_title\">{title}</h1>\n      <div className=\"image_div\">\n        <img className=\"image\" src={image} alt=\"\" />\n      </div>\n      <p className=\"calories\">Calories: {parseInt(calories)} Kcal</p>\n      <h2>Ingredients:</h2>\n      <ul className=\"ingredients\">\n        {ingredients.map((ingredient, index) => (\n          <li className=\"ingredient\" key={index}>\n            <i className=\"fas fa-caret-right\" /> {ingredient.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useContext } from \"react\";\nimport Recipe from \"./Recipe\";\nimport RecipeContext from \"../context/RecipeContext\";\n\nconst Recipes = () => {\n  const recipeContext = useContext(RecipeContext);\n  const { recipes, getRecipes } = recipeContext;\n\n  useEffect(() => {\n    getRecipes();\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"recipes\">\n      {recipes.map((recipe, index) => (\n        <Recipe key={index} {...recipe} />\n      ))}\n    </div>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"title\">Strange Recipes Finder</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport RecipeState from \"./context/RecipeState\";\nimport SearchRecipes from \"./components/SearchRecipes\";\nimport Recipes from \"./components/Recipes\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <RecipeState>\n      <div className=\"App\">\n        <Header />\n        <SearchRecipes />\n        <Recipes />\n      </div>\n    </RecipeState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}